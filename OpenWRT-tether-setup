###
### script/notes for setting up tethering on OpenWRT cuz im lazy and tired of doing it manually. All contents taken from: 
### https://openwrt.org/docs/guide-user/network/wan/smartphone.usb.tethering?s[]=tether
### added the line to add watchdog scripts to survive sysupgrades

###
### install pre-reqs in one go
### 
opkg update
opkg install kmod-usb-net-rndis kmod-usb-net-cdc-ncm kmod-usb-net-huawei-cdc-ncm kmod-usb-net-cdc-eem kmod-usb-net-cdc-ether kmod-usb-net-cdc-subset kmod-nls-base kmod-usb-core kmod-usb-net kmod-usb-net-cdc-ether kmod-usb2 kmod-usb3 kmod-usb-net-ipheth usbmuxd libimobiledevice usbutils hub-ctrl

###
### Restart tethering on connection failure
###
cat << "EOF" > /root/wan-watchdog.sh
#!/bin/sh
 
# Fetch WAN gateway
. /lib/functions/network.sh
network_flush_cache
network_find_wan NET_IF
network_get_gateway NET_GW "${NET_IF}"
 
# Check WAN connectivity
TRIES="0"
while [ "${TRIES}" -lt 5 ]
do
    if ping -c 1 -w 3 "${NET_GW}" &> /dev/null
    then exit 0
    else let TRIES++
    fi
done
 
# Restart network
/etc/init.d/network stop
hub-ctrl -h 0 -P 1 -p 0
sleep 1
hub-ctrl -h 0 -P 1 -p 1
/etc/init.d/network start
EOF
chmod +x /root/wan-watchdog.sh

echo "/root/wan-watchdog.sh" >> /etc/sysupgrade.conf

###
### prompt user assist for chrontab modification. 
### testing chrontab autoappend snippet. if undesired, remove ## in the 4 lines below & comment out section below
###
##read -n 1 -s -r -p "To set the script to run every minute as scheduled task: Go to LUCI→System→Scheduled Tasks, ##add:
##
##* * * * * /root/wan-watchdog.sh

##Press any key to continue..."

###
### automatic chrontab autoappend snippet stolen from https://unix.stackexchange.com/a/297377
###
echo "$(echo '* * * * * /root/wan-watchdog.sh' ; crontab -l 2>&1)" | crontab -

###
### setup iPhone watchdog
###
# Save watchdog script
mkdir -p /etc/lockdown
cat << "EOF" > /etc/lockdown/watchdog.sh
#!/bin/sh
# A small script to make life with iPhone tethering less cumbersome on OpenWrt
# Petr Vyskocil, Apr 2020
# Public domain
 
# After you successfully allow iPhone tethering, copy files with name like
# /var/lib/lockdown/12345678-9ABCDEF012345678.plist to /etc/lockdown/locks.
# That way, you won't have to set up trust again after router reboots.
if [ -e /etc/lockdown/locks ]
then
    mkdir -p /var/lib/lockdown
    cp -f /etc/lockdown/locks/* /var/lib/lockdown/
fi
 
# lockdown records restored, now we can launch usbmuxd. Don't launch it sooner!
usbmuxd
 
# We are up and running now. But unfortunately if your carrier signal is weak, iPhone will
# drop connection from time to time and you'd have to unplug and replug USB cable to start tethering
# again. Script below automates that activity.
 
# First wait a bit - we just brought the interface up by usbmuxd
sleep 20
 
# If we see iPhone ethernet interface, try to ping iPhone router's address (172.20.10.1).
# When the ping is unsuccessful, rebind iPhone ethernet USB driver and wait for things to settle down
while :
do
    for i in /sys/bus/usb/drivers/ipheth/*:*
    do
        test -e "${i}" || continue
        ping -w 3 172.20.10.1 &> /dev/null
        if [ "${?}" -ne 0 ]; then
            echo "${i##*/}" > "${i%/*}"/unbind
            echo "${i##*/}" > "${i%/*}"/bind
            sleep 20
        fi
    done
    sleep 1
done
EOF
chmod +x /etc/lockdown/watchdog.sh
 
# Add watchdog script to AutoStart
echo "/etc/lockdown/watchdog.sh" >> /etc/sysupgrade.conf
sed -i -e "\$i (/etc/lockdown/watchdog.sh) &" /etc/rc.local
